//Using a HashMap key is characters of current substring, and value is the according indices.
//The size of the map can be used to checked if the number of distinct characters more than two.
//Global variable "len" is used to store the final result.
public class Solution {
    public int lengthOfLongestSubstringTwoDistinct(String s) {
        if(s.length() < 1) return 0;
        int low = 0;
        int high = 0;
        int len = 0;
        Map<Character, Integer> map = new HashMap<Character, Integer>();
        while(high < s.length()){
            if(map.size() <= 2){
                map.put(s.charAt(high),high);
                high++;
            }
            if(map.size() > 2){
                int leftmost = Integer.MAX_VALUE;
                for(int i : map.values()){
                    leftmost = Math.min(leftmost,i);
                }
                low = leftmost + 1;
                map.remove(s.charAt(leftmost));
                
            }
            len = Math.max(len, high - low);
        }
        return len;
    }
}

//O(n)
