//First, sort the array.
//For each element in the sorted array, we check if there are two elements larger than it and which's sum are equal to 0 minus the element. Using two indices, The sum of two elements can be checked in O(n) time. 
//In order to remove dupilcate results, we should check adjacent elements in the sorted array. Skip equivalent element.
public class Solution{
    public List<List<Integer>> threeSum(int[] num){
    List<List<Integer>> res = new LinkedList<>();
    System.out.print
    Arrays.sort(num);
    for(int i = 0; i < num.length - 2; i++)
    {
        if(i == 0 || (i > 0 && num[i] != num[i-1])){
        int lo = i + 1; int hi = num.length - 1; int sum = 0 - num[i];
        while(lo < hi){
        if(num[lo] + num[hi] == sum)
        {
            res.add(Arrays.asList(num[i], num[lo], num[hi]));
            while(lo < hi && num[lo] == num[lo + 1]) lo++;
            while(lo < hi && num[hi] == num[hi - 1]) hi--;
            lo++; hi--;
        }
        else if(num[lo] + num[hi] > sum) hi--;
        else lo++;
        }}
    }
    return res;
    }
}




